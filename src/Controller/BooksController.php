<?php

namespace App\Controller;
use App\Entity\Authors;
use App\Entity\Books;

use App\Form\AddBookFormType;
use Doctrine\Persistence\ManagerRegistry;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
class BooksController extends AbstractController
{
    public $entityManager;
    public function __construct(ManagerRegistry $doctrine)
    {
        return $this->entityManager=$doctrine->getRepository(Books::class);
    }

    /**
    * @Route("/", name="books")
    */
    public function index(ManagerRegistry $doctrine): Response
    {

        return $this->render('books/books.html.twig', [
            'data' =>  $this->entityManager->findAll()
        ]);
    }



    /**
     * @Route("/addBook", name="addBook")
     */
    public function addBook(Request $request, ManagerRegistry $doctrine): Response
    {
        $book = new Books();
        $form = $this->createForm(AddBookFormType::class, $book);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $title = $form->getData()->getTitle();
            $author = $form->getData()->getAuthor();
            $description = $form->getData()->getDescription();
            $file = $form->get('img')->getData();

            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();
            // moves the file to the directory downloads
            $file->move(
                $this->getParameter('kernel.project_dir').'/public/images',
                $fileName
            );
            $year = $form->getData()->getYear();

            $entityManager = $doctrine->getManager();
            $book->setTitle($title)->setAuthor($author)
                ->setDescription($description)
                ->setImg($fileName)->setYear($year);
            $entityManager->persist($book);
            $entityManager->flush();

//            books_count_author

            $author = $doctrine->getRepository(Authors::class)->findOneBy(['surname' => $author]);
            $author->setCount($author->getCount()+1);
            $entityManager->persist($author);
            $entityManager->flush();

            return $this->redirect('/');
        }
        return $this->render('books/add.html.twig', array(
            'form' => $form->createView()
        ));
    }

    /**
     * @Route("/books/{id}", name="showBook")
     */
    public function showBook(ManagerRegistry $doctrine, $id): Response
    {
        return
            $this->render('books/show.html.twig', [
                'controller_name' => 'BooksController',
                'data' => $this->entityManager->findOneBy(['id' => $id]),
            ]);
    }

    /**
     * @Route("/delBook/{id}", name="deleteBook")
     */
    public function deleteBook(ManagerRegistry $doctrine, $id): Response
    {

            $bookToDel =$this->entityManager->findOneBy(['id' => $id]);
            $entityManager = $doctrine->getManager();
            $entityManager->remove($bookToDel);
            $entityManager->flush();

            return $this->redirect('/');
        }

    /**
     * @Route("/editBook/{id}", name="editBook")
     */
    public function editBook(Request $request, ManagerRegistry $doctrine, $id): Response
    {
        $book = $this->entityManager->findOneBy(['id' => $id]);

        $form = $this->createForm(AddBookFormType::class, $book);
        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {

            //get data from form
            $title_form = $form->getData()->getTitle();
            $author_form = $form->getData()->getAuthor();
            $description_form = $form->getData()->getDescription();
            $img_form = $form->getData()->getImg();
            $year_form = $form->getData()->getYear();

            //execute
            $entityManager = $doctrine->getManager();
            $book->setTitle($title_form)->setAuthor($author_form)->setDescription($description_form)
                ->setImg($img_form)->setYear($year_form);
            $entityManager->persist($book);
            $entityManager->flush();
            return $this->redirect('/');
        }
     
        return $this->render('books/edit.html.twig', array(
            'form' => $form->createView(), 'data' => $this->entityManager->findOneBy(['id' => $id])
        ));
    }

    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }



}

